<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.5.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="NewPins"/>
    </tool>
    <tool name="Probe">
      <a name="appearance" val="NewPins"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1">
    <tool name="PLA">
      <a name="table" val=""/>
    </tool>
  </lib>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="D Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="T Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="J-K Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="S-R Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Register">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Counter">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Shift Register">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="Random">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="RAM">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool name="ROM">
      <a name="appearance" val="logisim_evolution"/>
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;
use ieee.std_logic_1164.all;

entity TCL_Generic is
  port(
    --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example

	  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
  );
end TCL_Generic;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="text" val=""/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11">
    <tool name="Rv32im">
      <a name="SocBusSelection" val=""/>
    </tool>
    <tool name="Nios2">
      <a name="SocBusSelection" val=""/>
    </tool>
    <tool name="SocBus">
      <a name="SocBusIdentifier" val="0x00000186E27FC1A115e113ad"/>
    </tool>
    <tool name="Socmem">
      <a name="SocBusSelection" val=""/>
    </tool>
    <tool name="SocPio">
      <a name="SocBusSelection" val=""/>
    </tool>
    <tool name="SocVga">
      <a name="SocBusSelection" val=""/>
    </tool>
    <tool name="SocJtagUart">
      <a name="SocBusSelection" val=""/>
    </tool>
  </lib>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="text" val=""/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin">
      <a name="appearance" val="NewPins"/>
    </tool>
    <tool lib="0" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
    <tool lib="4" name="Register">
      <a name="appearance" val="logisim_evolution"/>
    </tool>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="circuitvhdlpath" val=""/>
    <a name="clabel" val=""/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="clabelup" val="east"/>
    <comp lib="0" loc="(230,270)" name="Ground"/>
    <comp lib="0" loc="(280,450)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Op"/>
      <a name="width" val="2"/>
    </comp>
    <comp lib="0" loc="(380,210)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(440,350)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(50,100)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(50,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="1" loc="(210,160)" name="AND Gate"/>
    <comp lib="1" loc="(210,240)" name="OR Gate"/>
    <comp lib="1" loc="(240,390)" name="XOR Gate"/>
    <comp lib="2" loc="(340,210)" name="Multiplexer">
      <a name="enable" val="false"/>
      <a name="select" val="2"/>
    </comp>
    <comp lib="3" loc="(200,310)" name="Adder">
      <a name="width" val="1"/>
    </comp>
    <comp lib="8" loc="(113,535)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="OR op code 01"/>
    </comp>
    <comp lib="8" loc="(119,511)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="AND op code 00"/>
    </comp>
    <comp lib="8" loc="(119,562)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="SUM op code 10"/>
    </comp>
    <comp lib="8" loc="(120,584)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="XOR op code 11"/>
    </comp>
    <comp lib="8" loc="(191,102)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="ALU"/>
    </comp>
    <comp lib="8" loc="(284,619)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="Assembly"/>
    </comp>
    <comp lib="8" loc="(346,513)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="AND a b"/>
    </comp>
    <comp lib="8" loc="(362,617)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="Assembler"/>
    </comp>
    <comp lib="8" loc="(379,104)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="Data Line =&gt; 10"/>
    </comp>
    <comp lib="8" loc="(406,452)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="Instruction =&gt; 00"/>
    </comp>
    <comp lib="8" loc="(451,574)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="Instruction =&gt; Compiler =&gt; sequence of 0's and 1's"/>
    </comp>
    <comp lib="8" loc="(524,512)" name="Text">
      <a name="font" val="SansSerif plain 12"/>
      <a name="text" val="0010 0011 1011 0101 1010 "/>
    </comp>
    <wire from="(100,140)" to="(100,220)"/>
    <wire from="(100,140)" to="(160,140)"/>
    <wire from="(100,220)" to="(100,300)"/>
    <wire from="(100,220)" to="(160,220)"/>
    <wire from="(100,300)" to="(100,370)"/>
    <wire from="(100,300)" to="(160,300)"/>
    <wire from="(100,370)" to="(180,370)"/>
    <wire from="(180,270)" to="(180,290)"/>
    <wire from="(180,270)" to="(230,270)"/>
    <wire from="(180,330)" to="(180,350)"/>
    <wire from="(180,350)" to="(440,350)"/>
    <wire from="(200,310)" to="(270,310)"/>
    <wire from="(210,160)" to="(250,160)"/>
    <wire from="(210,240)" to="(250,240)"/>
    <wire from="(240,390)" to="(280,390)"/>
    <wire from="(250,160)" to="(250,190)"/>
    <wire from="(250,190)" to="(300,190)"/>
    <wire from="(250,200)" to="(250,240)"/>
    <wire from="(250,200)" to="(300,200)"/>
    <wire from="(270,210)" to="(270,310)"/>
    <wire from="(270,210)" to="(300,210)"/>
    <wire from="(280,220)" to="(280,390)"/>
    <wire from="(280,220)" to="(300,220)"/>
    <wire from="(280,450)" to="(320,450)"/>
    <wire from="(320,230)" to="(320,450)"/>
    <wire from="(340,210)" to="(380,210)"/>
    <wire from="(40,470)" to="(520,470)"/>
    <wire from="(40,480)" to="(520,480)"/>
    <wire from="(50,100)" to="(70,100)"/>
    <wire from="(50,130)" to="(60,130)"/>
    <wire from="(60,130)" to="(550,130)"/>
    <wire from="(60,130)" to="(60,180)"/>
    <wire from="(60,180)" to="(90,180)"/>
    <wire from="(70,100)" to="(70,110)"/>
    <wire from="(70,110)" to="(540,110)"/>
    <wire from="(70,110)" to="(70,140)"/>
    <wire from="(70,140)" to="(100,140)"/>
    <wire from="(90,180)" to="(160,180)"/>
    <wire from="(90,180)" to="(90,260)"/>
    <wire from="(90,260)" to="(160,260)"/>
    <wire from="(90,260)" to="(90,320)"/>
    <wire from="(90,320)" to="(160,320)"/>
    <wire from="(90,320)" to="(90,410)"/>
    <wire from="(90,410)" to="(180,410)"/>
  </circuit>
</project>
